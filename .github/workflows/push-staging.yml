name: Deploy to Production on staging push

on:
  push:
    branches: [ staging ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: pytest tests/unit

      - name: Run integration tests
        run: pytest tests/integration

      - name: Run end-to-end tests
        run: pytest tests/e2e

  push-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code with full history
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PA_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git user
        run: |
          git config user.name "arthur-gtgn"
          git config user.email "arthur.gatignol@gmail.com"

      - name: Merge staging into main and push
        run: |

          git fetch --prune origin

          if git ls-remote --exit-code --heads origin main ; then
            git checkout -B main origin/main
          else
            git checkout -b main
          fi

          # Merge, preferring files from staging if the same path exists
          git merge --no-ff -X theirs staging -m "[ACTIONS]: Merge changes from staging to main"

          git push origin main
